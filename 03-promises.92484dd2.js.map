{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAO,CACbC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,kBACjCE,QAASH,SAASC,cAAc,iBAChCG,UAAWJ,SAASC,cAAc,oBAQlC,SAASI,EAAcC,EAAUC,GAW/B,OAVe,IAAIC,SAAQ,SAACC,EAASC,GACnC,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAASC,S,GAElBA,E,IAZPT,EAAKC,QAAQgB,iBAAiB,UAiB9B,SAA2BC,GACzBA,EAAMC,iBASR,IALA,IAAIC,GAAUpB,EAAKI,SAASiB,MACtBC,GAAWtB,EAAKM,UAAUe,MAC1BE,GAASvB,EAAKK,QAAQgB,MAGnBG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAC9BjB,EAAciB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBX,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAElEqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACdX,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DW,GAASG,EAEXvB,EAAKC,QAAQ+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst refs = {\nformRef: document.querySelector('.form'),\ndelayRef: document.querySelector('[name=\"delay\"]'),\nstepRef: document.querySelector('[name=\"step\"]'),\namountRef: document.querySelector('[name=\"amount\"]'),\n}\n\n\n\nrefs.formRef.addEventListener('submit', runCreatePromises)\n\n\nfunction createPromise(position, delay) {\n const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position,delay});\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nfunction runCreatePromises(event) {\n  event.preventDefault();\n\n\n\nlet delay = +(refs.delayRef.value);\nconst amount = +(refs.amountRef.value);\nconst step = +(refs.stepRef.value);\n\n\nfor (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    delay += step;\n  }\n  refs.formRef.reset()\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","delayRef","stepRef","amountRef","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","value","amount","step","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.92484dd2.js.map"}